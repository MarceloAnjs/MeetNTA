{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "MeetNTA API",
        "description": "Documentation MeetNTA API",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "contact": {
            "name": "Augusto Zanoni",
            "email": "augustozanonii@gmail.com",
            "url": "http://linkedin.com/in/augustozanoni"
        }
    },
    "servers": [
        {
            "url": "http://localhost:3001",
            "description": "Local server"
        },
        {
            "url": "http://myapp.heroku.com/",
            "description": "Production Server"
        }
    ],
    "tags": [
        {
            "name": "Users",
            "description": "Operations about Users"
        }
    ],
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json",
        "application/x-www-form-urlencoded"
    ],
    "produces": [
        "application/json",
        "application/x-www-form-urlencoded"
    ],
    "paths": {
        "/api/register": {
            "post": {
                "summary": "Creates a new user",
                "operationId": "createUser",
                "tags": [
                    "Users"
                ],
                "description": "Creates a new user with given input array",
                "parameters": [],
                "requestBody": {
                    "name": "body",
                    "in": "body",
                    "description": "User that we want to create",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The user has been created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/UserSucess"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "summary": "Login",
                "operationId": "authenticateUser",
                "tags": [
                    "Users"
                ],
                "description": "Authenticate the user on the API generating a JWT token",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAuth"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The user has been authenticate and the JWT returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticatedUserResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "User unauthorized",
                                    "code": "401",
                                    "error": "Unauthorized"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "summary": "Get all users",
                "operationId": "listUsers",
                "security": [
                    {
                      "ApiKeyAuth": []
                    }
                  ],
                "tags": [
                    "Users"
                ],
                "description": "Get a list of all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    }
                }
            }
        },
        "/api/users/{_id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user by id",
                "operationId": "getUserId",
                "security": [
                    {
                      "ApiKeyAuth": []
                    }
                  ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "description": "ID of user that needs to get user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/update": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Updates a user status",
                "operationId": "updateUser",
                "security": [
                    {
                      "ApiKeyAuth": []
                    }
                  ],
                "requestBody": {
                    "name": "body",
                    "in": "body",
                    "description": "User that we want to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/updateUser"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "User updated.",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Error": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "jwtToken": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZTdmZTQ0YzQzYWQwYjAwMThmOGQ5ZmQiLCJuYW1lIjoiV2FsZGVtYXIgTmV0byIsImVtYWlsIjoid2FsZGVtYXJudEBnbWFpbC5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRsUlZjWkc5d0dIVWJXcHF2TnJNR0F1SnNoWWJTR1RLSElQL3NycDlmTlkzZENFZDBJQjN6TyIsImlhdCI6MTU4NTQ0MDUxNywiZXhwIjoxNTg1NDYwNTE3fQ.JNtzLgCKGTAU9_-QjYUNxtM7X4nMU_pPIsNXDsEM-vP"
            },
            "UserAuth": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "AuthenticatedUserResponse": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "username": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "socketId": {
                                "type": "string"
                            },
                            "isOnline": {
                                "type": "string"
                            },
                            "Token": {
                                "$ref": "#/components/schemas/jwtToken"
                            }
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "ApiKeyAuth": {
              "type": "http",
              "in": "header",
              "scheme": "bearer",
      "bearerFormat": "JWT",
              "name": "Authorization"
            }
          }
    },

    "definitions": {
        "User": {
            "required": [
                "firstName",
                "lastName",
                "userName",
                "email",
                "password"
            ],
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "UserSucess": {
            "required": [
                "firstName",
                "lastName",
                "userName",
                "email",
                "password"
            ],
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "updateUser": {
            "properties": {
                "_id": {
                    "type": "string"
                },
                "socketId": {
                    "type": "string"
                },
                "isOnline": {
                    "type": "boolean"
                }
            }
        },
        "Users": {
            "type": "object",
            "$ref": "#/definitions/User"
        }
    }
}